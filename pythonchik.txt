 Для начала необходимо установить интерпретатор
- При установке указываем Add Python 3.7 to PATH, чтобы проще было работать через консоль

Для запуска программы в консоли пишем:
cd [путь_к_файлу_программы]
python [имя_файла.py]

21.08.2019 ==============================================================================

- Переменные объявляем без типизации;

print() - функция вывода;
input() - функция ввода;

#комментарий

- Высокая регистрозависимость: print и Print - разные вещи

- Необходима табуляция
Пр.	
if(a>b):
    print("A > B")

то есть вместо {} используются отступы

22.08.2019 ==============================================================================

type() - узнать тип переменной;

[числовая_переменная] = 1.5e10 <-- число с плавающей точкой, с указанием числа нулей после;

------------------------------------------------
ручная типизация на примере переменной a:

	a = int(input("Введите А: "))

то есть мы вручную прописываем тип перед вводом
------------------------------------------------

23.08.2019 ===============================================================================

Арифметические операции:

* Сложение двух чисел: print(a + b)
* Вычитание двух чисел: print(a - b)
* Умножение двух чисел: print(a * b)
* Деление двух чисел: print(a / b)
* Целочисленное деление двух чисел: print(a // b)
* Возведение в степень: print(a ** b)
* Получение остатка от деления: print(a % b)

Приоритет операций:
- сперва выполняется возведение в степень как операция с большим приоритетом;
- далее результат умножния/деления; 
- затем происходит сложение/вычетание;
- приоритет можно менять с помощью скобок.	


Для определения числа в двоичной системе перед его значением ставится 0 и префикс b:
	x = 0b101	//101 в двоичной системе равно 5
Для определения числа в восьмеричной системе перед его значением ставится 0 и префикс o:
	a = 0o11	//11 в восьмеричной системе равно 9
Для определения числа в шестнадцатеричной системе перед его значением ставится 0 и префикс x:
	y = 0x0a	//a в шестнадцатеричной системе равно 10

Для вывода числа в различных системах исчисления используются функция format, которая вызывается у строки. В эту строку передаются различные форматы:
- для двоичной системы "{0:08b}", где число 8 указывает, сколько знаков должно быть в записи числа;
- если знаков указано больше, чем требуется для числа, то ненужные позиции заполняются нулями;
- для шестнадцатеричной системы применяется формат "{0:02x}";
- для записи в восьмеричной системе испольуется формат "{0:02o}

Пример: print("{0} in binary {0:08b} in hex {0:02x} in octal {0:02o}".format(z))

Логические операторы: and ("и"), or ("или"), not ("не")

27.08.2019 ===============================================================================

Конструкция if-else:

	if [условие]:
		[выражение]
	elif [условие]:
		[выражение]
	else:
		[выражение]

elif - эквивалент "else if"
		
	